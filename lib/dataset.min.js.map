{"version":3,"sources":["dataset.min.js","autosuggest.js","autosuggest-multi.js","autosuggest-sources.js","app.js","constants.js","region-lookup.js","base64.js","autosuggest-source.js","autosuggest-results.js","dataset.js"],"names":["_classCallCheck","instance","Constructor","TypeError","delay","milliseconds","Promise","resolve","reject","setTimeout","multiComplete","inputSelector","resultSelector","navigate","path","window","location","href","domain","sources","name","image","fxf","column","encoded","select","option","show","selection","append","attr","text","id","replace","sort","parseFloat","population","autosuggest","Autosuggest","listen","regionsWithData","_nameToColumn","has","get","defaultColumn","_","extend","_withDataSource","$","document","ready","click","val","trim","length","focus","submit","Array","prototype","includes","s","this","indexOf","String","format","args","arguments","match","number","split2","rg","split","Constants","ROSTER_URL","AUTOCOMPLETE_SEPARATOR","AUTOCOMPLETE_URL","term","AUTOCOMPLETE_WAIT_MS","AUTOCOMPLETE_MAX_OPTIONS","AUTOCOMPLETE_SHOWN_OPTIONS","PEER_REGIONS","PEER_REGIONS_MAX","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","RegionLookup","value","params","getJSON","param","selectRegion","regions","console","warn","places","filter","region","type","then","error","getOne","Base64","utf8","btoa","unescape","encodeURIComponent","str","decodeURIComponent","escape","atob","AutosuggestSource","_this","baseURL","size","url","response","options","map","decode","allText","index","lastIndexOf","substring","base64","decoded","attributes","object","container","_this2","sortBy","slice","category","results","self","selectAll","data","enter","each","d3","on","classed","json","AutosuggestResults","autohide","hide","event","stopPropagation","style","html","source","empty","unhide","display","allOptions","_this3","nestedSelections","updateOptions","flatten","_this4","forEach","updateSelected","_this5","keyCode","up","down","datum","fromJSON","_currentTerm","_time","Date","now","preventDefault","keydown","throttledSuggest","suggest","time","promises","all","q","Map","set","row","fieldName","urlForUniqueValues","_datasetMeta","resourceUrl","resultsToShow","initial","valuesToShow","result","isObject","JSON","stringify","numeral","count","join","find"],"mappings":"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","file":"dataset.min.js","sourcesContent":["'use strict';\n\n$(document).ready(function () {\n\n    // Attach handler to the search button\n    //\n    $('.search-link').click(function () {\n\n        var text = $('#q').val().trim();\n\n        if (text.length === 0) $('#q').focus();else $('#form').submit();\n    });\n});\n\n// Array extensions\n//\nArray.prototype.includes = function (s) {\n\n    return this.indexOf(s) > -1;\n};\n\n// String extensions\n//\nString.prototype.format = function () {\n\n    var args = arguments;\n\n    return this.replace(/{(\\d+)}/g, function (match, number) {\n        return typeof args[number] != 'undefined' ? args[number] : match;\n    });\n};\n\nString.prototype.split2 = function (s) {\n\n    var rg = this.split(s);\n\n    if (rg.length == 1 && rg[0] === '') return [];\n\n    return rg;\n};\n'use strict';\n\nvar Constants = {\n    ROSTER_URL: 'https://federal.demo.socrata.com/resource/bdeb-mf9k.json',\n\n    AUTOCOMPLETE_SEPARATOR: ':',\n    AUTOCOMPLETE_URL: function AUTOCOMPLETE_URL(domain, fxf, column, term) {\n        return 'https://' + domain + '/views/' + fxf + '/columns/' + column + '/suggest/' + term;\n    },\n    AUTOCOMPLETE_WAIT_MS: 150,\n    AUTOCOMPLETE_MAX_OPTIONS: 100,\n    AUTOCOMPLETE_SHOWN_OPTIONS: 5,\n\n    PEER_REGIONS: 5,\n    PEER_REGIONS_MAX: 10\n};\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RegionLookup = (function () {\n    function RegionLookup() {\n        _classCallCheck(this, RegionLookup);\n    }\n\n    _createClass(RegionLookup, null, [{\n        key: 'get',\n        value: function get(params) {\n            return $.getJSON(Constants.ROSTER_URL + '?' + $.param(params));\n        }\n    }, {\n        key: 'getOne',\n        value: function getOne(params) {\n            function selectRegion(regions) {\n                if (regions.length === 0) {\n                    console.warn('no regions found for params: ');\n                    console.warn(params);\n                    return null;\n                } else if (regions.length === 1) {\n                    return regions[0];\n                } else {\n                    var places = _.filter(regions, function (region) {\n                        return region.type === 'place';\n                    });\n\n                    if (places.length > 0) {\n                        return places[0];\n                    } else {\n                        return regions[0];\n                    }\n                }\n            }\n\n            return new Promise(function (resolve, reject) {\n                RegionLookup.get(params).then(function (regions) {\n                    resolve(selectRegion(regions));\n                }, function (error) {\n                    throw error;\n                });\n            });\n        }\n    }, {\n        key: 'byName',\n        value: function byName(name) {\n            return RegionLookup.getOne({ name: name });\n        }\n    }, {\n        key: 'byID',\n        value: function byID(id) {\n            return RegionLookup.getOne({ id: id });\n        }\n    }]);\n\n    return RegionLookup;\n})();\n\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Base64 = (function () {\n    function Base64() {\n        _classCallCheck(this, Base64);\n    }\n\n    _createClass(Base64, null, [{\n        key: \"encode\",\n        value: function encode(utf8) {\n            return btoa(unescape(encodeURIComponent(str)));\n        }\n    }, {\n        key: \"decode\",\n        value: function decode(encoded) {\n            return decodeURIComponent(escape(atob(encoded)));\n        }\n    }]);\n\n    return Base64;\n})();\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AutosuggestSource = (function () {\n    function AutosuggestSource(name, image, domain, fxf, column, encoded, select, show, sort) {\n        _classCallCheck(this, AutosuggestSource);\n\n        this.name = name;\n        this.image = image;\n        this.domain = domain;\n        this.fxf = fxf;\n        this.column = column;\n        this.encoded = encoded;\n        this.select = select;\n        this.show = show;\n        this.sort = sort;\n    }\n\n    _createClass(AutosuggestSource, [{\n        key: 'get',\n        value: function get(term) {\n            var _this = this;\n\n            return new Promise(function (resolve, reject) {\n                if (term === '') {\n                    resolve([]);\n                } else {\n                    var baseURL = Constants.AUTOCOMPLETE_URL(_this.domain, _this.fxf, _this.column, term);\n                    var size = _this.sort ? Constants.AUTOCOMPLETE_MAX_OPTIONS : Constants.AUTOCOMPLETE_SHOWN_OPTIONS;\n                    var params = { size: size };\n                    var url = baseURL + '?' + $.param(params);\n\n                    $.getJSON(url).then(function (response) {\n                        resolve(response.options.map(function (option) {\n                            return _this.decode(option);\n                        }));\n                    }, reject);\n                }\n            });\n        }\n    }, {\n        key: 'decode',\n        value: function decode(option) {\n            if (this.encoded.length > 0) {\n                var allText = option.text;\n                var index = allText.lastIndexOf(' ');\n                var text = allText.substring(0, index);\n                var base64 = allText.substring(index + 1);\n                var decoded = Base64.decode(base64);\n                var attributes = decoded.split(Constants.AUTOCOMPLETE_SEPARATOR);\n\n                return _.extend({ text: text }, _.object(this.encoded, attributes));\n            } else {\n                return { text: option.text };\n            }\n        }\n    }, {\n        key: 'display',\n        value: function display(container, options) {\n            var _this2 = this;\n\n            if (options.length === 0) return [];\n\n            if (this.sort) options = _.sortBy(options, this.sort).slice(0, Constants.AUTOCOMPLETE_SHOWN_OPTIONS);\n\n            var category = container.append('li').attr('class', 'autocomplete-category');\n\n            if (this.image) {\n                var name = category.append('label').attr('class', 'autocomplete-title').text(this.name);\n\n                if (options.length > 1) {\n                    var image = category.append('div').append('i').attr('class', 'fa ' + this.image);\n                }\n            }\n\n            var results = category.append('ul').attr('class', 'autocomplete-options sub-list');\n\n            var self = this;\n            return results.selectAll('li').data(options).enter().append('li').attr('class', 'autocomplete-option').each(function (option) {\n                self.show(d3.select(this), option);\n            }).on('click', function (option) {\n                return _this2.select(option);\n            }).on('mouseover.source', function () {\n                d3.select(this).classed('selected hovered', true);\n            }).on('mouseout.source', function () {\n                d3.select(this).classed('selected hovered', false);\n            })[0];\n        }\n    }], [{\n        key: 'fromJSON',\n        value: function fromJSON(json) {\n            var encoded = json.encoded || [];\n            var show = json.show || function (selection, option) {\n                selection.append('span').text(option.text);\n            };\n\n            return new AutosuggestSource(json.name, json.image, json.domain, json.fxf, json.column, encoded, json.select, show, json.sort);\n        }\n    }]);\n\n    return AutosuggestSource;\n})();\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AutosuggestResults = (function () {\n    function AutosuggestResults(resultSelector) {\n        _classCallCheck(this, AutosuggestResults);\n\n        this.results = d3.select(resultSelector);\n\n        this.options = [];\n        this.index = -1;\n\n        this.autohide();\n    }\n\n    _createClass(AutosuggestResults, [{\n        key: 'autohide',\n        value: function autohide() {\n            var _this = this;\n\n            d3.select('html').on('click.results', function () {\n                return _this.hide();\n            });\n\n            this.results.on('click.results', function () {\n                return d3.event.stopPropagation();\n            });\n        }\n    }, {\n        key: 'hide',\n        value: function hide() {\n            this.results.style('display', 'none');\n        }\n    }, {\n        key: 'unhide',\n        value: function unhide() {\n            this.results.style('display', 'block');\n        }\n    }, {\n        key: 'empty',\n        value: function empty() {\n            this.results.html('');\n        }\n    }, {\n        key: 'display',\n        value: function display(term) {\n            var _this2 = this;\n\n            return new Promise(function (resolve, reject) {\n                _this2.source.get(term).then(function (options) {\n                    _this2.empty();\n\n                    if (options.length === 0) {\n                        _this2.hide();\n                        resolve([]);\n                    } else {\n                        _this2.unhide();\n                        resolve(_this2.source.display(_this2.results, options));\n                    }\n                }, function (error) {\n                    throw error;\n                });\n            });\n        }\n    }, {\n        key: 'show',\n        value: function show(sources, allOptions) {\n            var _this3 = this;\n\n            this.empty();\n\n            var nestedSelections = sources.map(function (source, index) {\n                var options = allOptions[index];\n                return source.display(_this3.results, options);\n            });\n\n            this.updateOptions(_.flatten(nestedSelections));\n            this.unhide();\n        }\n    }, {\n        key: 'updateOptions',\n        value: function updateOptions(options) {\n            var _this4 = this;\n\n            this.options = options.map(function (option) {\n                return d3.select(option);\n            });\n\n            this.options.forEach(function (option, index) {\n                option.on('mouseover.results', function () {\n                    _this4.index = index;\n                    _this4.updateSelected();\n                }).on('mouseout.results', function () {\n                    _this4.index = -1;\n                    _this4.updateSelected();\n                });\n            });\n        }\n    }, {\n        key: 'updateSelected',\n        value: function updateSelected() {\n            var _this5 = this;\n\n            this.options.forEach(function (option, index) {\n                option.classed('selected', index === _this5.index);\n            });\n        }\n    }, {\n        key: 'keydown',\n        value: function keydown(keyCode) {\n            if (keyCode == 38) {\n                this.up();\n            } else if (keyCode == 40) {\n                this.down();\n            }\n\n            this.updateSelected();\n        }\n    }, {\n        key: 'up',\n        value: function up() {\n            if (this.index > 0) {\n                this.index -= 1;\n            } else {\n                this.index = this.options.length - 1;\n            }\n        }\n    }, {\n        key: 'down',\n        value: function down() {\n            if (this.index < this.options.length - 1) {\n                this.index += 1;\n            } else {\n                this.index = 0;\n            }\n        }\n    }, {\n        key: 'enter',\n        value: function enter() {\n            var selection = this.options[this.index];\n            selection.on('click')(selection.datum());\n        }\n    }]);\n\n    return AutosuggestResults;\n})();\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction delay(milliseconds) {\n    return new Promise(function (resolve, reject) {\n        setTimeout(resolve, milliseconds);\n    });\n}\n\nvar Autosuggest = (function () {\n    function Autosuggest(resultSelector, sources) {\n        _classCallCheck(this, Autosuggest);\n\n        this.sources = sources.map(AutosuggestSource.fromJSON);\n        this.results = new AutosuggestResults(resultSelector);\n\n        this._currentTerm = '';\n        this._time = Date.now();\n    }\n\n    _createClass(Autosuggest, [{\n        key: 'listen',\n        value: function listen(inputSelector) {\n            var self = this;\n\n            var input = d3.select(inputSelector).on('keydown', function () {\n                var keyCode = d3.event.keyCode;\n\n                if (keyCode == 13) {\n                    d3.event.preventDefault();\n                    self.enter();\n                } else {\n                    self.results.keydown(keyCode);\n                }\n            }).on('input', function () {\n                self.throttledSuggest(this.value);\n            });\n        }\n    }, {\n        key: 'throttledSuggest',\n        value: function throttledSuggest(term) {\n            var _this = this;\n\n            delay(Constants.AUTOCOMPLETE_WAIT_MS).then(function () {\n                if (term === _this._currentTerm) {\n                    _this.suggest(term);\n                }\n            });\n\n            this._currentTerm = term;\n        }\n    }, {\n        key: 'suggest',\n        value: function suggest(term) {\n            var _this2 = this;\n\n            if (term === '') {\n                this.results.hide();\n            } else {\n                (function () {\n                    var time = Date.now();\n                    var promises = _this2.sources.map(function (source) {\n                        return source.get(term);\n                    });\n\n                    Promise.all(promises).then(function (allOptions) {\n                        if (time > _this2._time) {\n                            _this2._time = time;\n                            _this2.results.show(_this2.sources, allOptions);\n                        }\n                    });\n                })();\n            }\n        }\n    }, {\n        key: 'enter',\n        value: function enter() {\n            if (this.results.index < 0) {\n                if (this.results.options.length == 1) {\n                    this.results.index = 0;\n                    this.results.enter();\n                    return;\n                }\n                var path = '/search?' + $.param({ q: this._currentTerm });\n                window.location.href = path;\n            } else {\n                this.results.enter();\n            }\n        }\n    }]);\n\n    return Autosuggest;\n})();\n'use strict';\n\n// Autocomplete on datasets, regions, publishers, and categories.\nfunction multiComplete(inputSelector, resultSelector) {\n    function navigate(path) {\n        window.location.href = path;\n    }\n\n    var domain = 'odn.data.socrata.com';\n\n    var sources = [{\n        name: 'Datasets',\n        image: 'fa-bar-chart',\n        domain: domain,\n        fxf: 'fpum-bjbr',\n        column: 'encoded',\n        encoded: ['domain', 'fxf'],\n        select: function select(option) {\n            return navigate('/dataset/' + option.domain + '/' + option.fxf);\n        },\n        show: function show(selection, option) {\n            selection.append('span').attr('class', 'name').text(option.text).append('span').attr('id', 'tag').text(option.domain);\n        }\n    }, {\n        name: 'Regions',\n        image: 'fa-globe',\n        domain: domain,\n        fxf: '68ht-6puw',\n        column: 'all',\n        encoded: ['id', 'type', 'population'],\n        select: function select(option) {\n            navigate('/region/' + option.id + '/' + option.text.replace(/ /g, '_').replace(/\\//g, '_').replace(/,/g, ''));\n        },\n        sort: function sort(option) {\n            return -parseFloat(option.population);\n        }\n    }, {\n        name: 'Publishers',\n        image: 'fa-newspaper-o',\n        domain: domain,\n        fxf: '8ae5-ghum',\n        column: 'domain',\n        select: function select(option) {\n            return navigate('/search?domains=' + option.text);\n        }\n    }, {\n        name: 'Categories',\n        image: 'fa-fighter-jet',\n        domain: domain,\n        fxf: '864v-r7tf',\n        column: 'category',\n        select: function select(option) {\n            return navigate('/search?categories=' + option.text);\n        },\n        show: function show(selection, option) {\n            selection.append('span').attr('class', 'capitalize').text(option.text);\n        }\n    }];\n\n    var autosuggest = new Autosuggest(resultSelector, sources);\n    autosuggest.listen(inputSelector);\n\n    return autosuggest;\n}\n'use strict';\n\nvar domain = 'odn.data.socrata.com';\n\nvar _nameToColumn = new Map();\n_nameToColumn.set('population', 'population');\n_nameToColumn.set('earnings', 'earnings');\n_nameToColumn.set('education', 'education');\n_nameToColumn.set('occupations', 'occupations');\n_nameToColumn.set('cost_of_living', 'rpp');\n_nameToColumn.set('gdp', 'gdp');\n_nameToColumn.set('health', 'health');\nvar defaultColumn = 'all';\n\nvar _withDataSource = {\n    name: 'Regions with Data',\n    domain: domain,\n    fxf: '68ht-6puw',\n    encoded: ['id', 'type', 'population'],\n    sort: function sort(option) {\n        return -parseFloat(option.population);\n    }\n};\n\nfunction regionsWithData(name, select) {\n    var column = _nameToColumn.has(name) ? _nameToColumn.get(name) : defaultColumn;\n\n    return [_.extend({}, _withDataSource, { select: select, column: column })];\n}\n'use strict';\n\n$(document).ready(function () {\n\n    // Multi-complete\n    //\n    multiComplete('#q', '.region-list').listen();\n\n    // for each row (each of which represent a dataset column)\n    //\n    $('.columns-container table tr.column-row').each(function () {\n\n        var row = $(this);\n        var fieldName = row.attr('data-field-name');\n\n        // Find first 5 unique values\n        //\n        var urlForUniqueValues = _datasetMeta.resourceUrl + '?$group=' + fieldName + '&$select=' + fieldName + ' as value,count(*)' + '&$order=count desc';\n\n        $.getJSON(urlForUniqueValues + '&$limit=6', function (results) {\n\n            var resultsToShow = results.length == 6 ? _.initial(results, 5) : results;\n            var valuesToShow = _.map(resultsToShow, function (result) {\n\n                if (!result.value) result.value = '<em>blank</em>';\n\n                if (_.isObject(result.value)) result.value = JSON.stringify(result.value);\n\n                return result.value + ' <small>(' + numeral(result.count).format(',') + ')</small>';\n            });\n\n            var s = valuesToShow.join('<br>');\n\n            if (results.length == 6) s += '<br><a target=\"blank\" href=\"' + urlForUniqueValues + '&$limit=1000000000\">view all</a>';\n\n            row.find('.popular-values').html(s);\n        });\n    });\n});","\nfunction delay(milliseconds) {\n    return new Promise((resolve, reject) => {\n        setTimeout(resolve, milliseconds);\n    });\n}\n\n\nclass Autosuggest {\n    constructor(resultSelector, sources) {\n        this.sources = sources.map(AutosuggestSource.fromJSON);\n        this.results = new AutosuggestResults(resultSelector);\n\n        this._currentTerm = '';\n        this._time = Date.now();\n    }\n\n    listen(inputSelector) {\n        const self = this;\n\n        const input = d3.select(inputSelector)\n            .on('keydown', function() {\n                const keyCode = d3.event.keyCode;\n\n                if (keyCode == 13) {\n                    d3.event.preventDefault();\n                    self.enter();\n                } else {\n                    self.results.keydown(keyCode);\n                }\n            })\n            .on('input', function() {\n                self.throttledSuggest(this.value);\n            });\n    }\n\n    throttledSuggest(term) {\n        delay(Constants.AUTOCOMPLETE_WAIT_MS).then(() => {\n            if (term === this._currentTerm) {\n                this.suggest(term);\n            }\n        });\n\n        this._currentTerm = term;\n    }\n\n    suggest(term) {\n        if (term === '') {\n            this.results.hide();\n        } else {\n            const time = Date.now();\n            const promises = this.sources.map(source => source.get(term));\n\n            Promise.all(promises).then(allOptions => {\n                if (time > this._time) {\n                    this._time = time;\n                    this.results.show(this.sources, allOptions);\n                }\n            });\n        }\n    }\n\n    enter() {\n        if (this.results.index < 0) {\n            if (this.results.options.length == 1) {\n                this.results.index = 0;\n                this.results.enter();\n                return;\n            }\n            const path = `/search?${$.param({q: this._currentTerm})}`;\n            window.location.href = path;\n        } else {\n            this.results.enter();\n        }\n    }\n}\n\n","\n// Autocomplete on datasets, regions, publishers, and categories.\nfunction multiComplete(inputSelector, resultSelector) {\n    function navigate(path) {\n        window.location.href = path;\n    }\n\n    const domain = 'odn.data.socrata.com';\n\n    const sources = [\n        {\n            name: 'Datasets',\n            image: 'fa-bar-chart',\n            domain: domain,\n            fxf: 'fpum-bjbr',\n            column: 'encoded',\n            encoded: ['domain', 'fxf'],\n            select: option => navigate(`/dataset/${option.domain}/${option.fxf}`),\n            show: (selection, option) => {\n                selection.append('span')\n                    .attr('class', 'name')\n                    .text(option.text)\n                    .append('span')\n                    .attr('id', 'tag')\n                    .text(option.domain);\n            }\n        },\n        {\n            name: 'Regions',\n            image: 'fa-globe',\n            domain: domain,\n            fxf: '68ht-6puw',\n            column: 'all',\n            encoded: ['id', 'type', 'population'],\n            select: option => {\n                navigate(`/region/${option.id}/${option.text.replace(/ /g, '_').replace(/\\//g, '_').replace(/,/g, '')}`);\n            },\n            sort: option => -parseFloat(option.population)\n        },\n        {\n            name: 'Publishers',\n            image: 'fa-newspaper-o',\n            domain: domain,\n            fxf: '8ae5-ghum',\n            column: 'domain',\n            select: option => navigate(`/search?domains=${option.text}`)\n        },\n        {\n            name: 'Categories',\n            image: 'fa-fighter-jet',\n            domain: domain,\n            fxf: '864v-r7tf',\n            column: 'category',\n            select: option => navigate(`/search?categories=${option.text}`),\n            show: (selection, option) => {\n                selection.append('span')\n                    .attr('class', 'capitalize')\n                    .text(option.text);\n            }\n        }\n    ];\n\n    const autosuggest = new Autosuggest(resultSelector, sources);\n    autosuggest.listen(inputSelector);\n\n    return autosuggest;\n}\n\n","\nconst domain = 'odn.data.socrata.com';\n\nconst _nameToColumn = new Map();\n_nameToColumn.set('population', 'population');\n_nameToColumn.set('earnings', 'earnings');\n_nameToColumn.set('education', 'education');\n_nameToColumn.set('occupations', 'occupations');\n_nameToColumn.set('cost_of_living', 'rpp');\n_nameToColumn.set('gdp', 'gdp');\n_nameToColumn.set('health', 'health');\nconst defaultColumn = 'all';\n\nconst _withDataSource = {\n    name: 'Regions with Data',\n    domain: domain,\n    fxf: '68ht-6puw',\n    encoded: ['id', 'type', 'population'],\n    sort: option => -parseFloat(option.population)\n};\n\nfunction regionsWithData(name, select) {\n    const column = _nameToColumn.has(name) ? _nameToColumn.get(name) : defaultColumn;\n\n    return [_.extend({}, _withDataSource, {select, column})];\n}\n\n","$(document).ready(function() {\n\n    // Attach handler to the search button\n    //\n    $('.search-link').click(function() {\n\n        var text = $('#q').val().trim();\n\n        if (text.length === 0)\n            $('#q').focus();\n        else\n            $('#form').submit();\n    });\n});\n\n// Array extensions\n//\nArray.prototype.includes = function(s) {\n\n    return this.indexOf(s) > -1;\n};\n\n// String extensions\n//\nString.prototype.format = function() {\n\n    var args = arguments;\n\n    return this.replace(/{(\\d+)}/g, function(match, number) {\n        return typeof args[number] != 'undefined' ? args[number] : match;\n    });\n};\n\nString.prototype.split2 = function(s) {\n\n    var rg = this.split(s);\n\n    if ((rg.length == 1) && (rg[0] === ''))\n        return [];\n\n    return rg;\n};\n","\nconst Constants = {\n    ROSTER_URL: 'https://federal.demo.socrata.com/resource/bdeb-mf9k.json',\n\n    AUTOCOMPLETE_SEPARATOR: ':',\n    AUTOCOMPLETE_URL: (domain, fxf, column, term) => {\n        return `https://${domain}/views/${fxf}/columns/${column}/suggest/${term}`;\n    },\n    AUTOCOMPLETE_WAIT_MS: 150,\n    AUTOCOMPLETE_MAX_OPTIONS: 100,\n    AUTOCOMPLETE_SHOWN_OPTIONS: 5,\n\n    PEER_REGIONS: 5,\n    PEER_REGIONS_MAX: 10\n};\n\n","\nclass RegionLookup {\n    static get(params) {\n        return $.getJSON(`${Constants.ROSTER_URL}?${$.param(params)}`);\n    }\n\n    static getOne(params) {\n        function selectRegion(regions) {\n            if (regions.length === 0) {\n                console.warn('no regions found for params: ');\n                console.warn(params);\n                return null;\n            } else if (regions.length === 1) {\n                return regions[0];\n            } else {\n                const places = _.filter(regions, region => region.type === 'place');\n\n                if (places.length > 0) {\n                    return places[0];\n                } else {\n                    return regions[0];\n                }\n            }\n        }\n\n        return new Promise((resolve, reject) => {\n            RegionLookup.get(params)\n                .then(regions => {\n                          resolve(selectRegion(regions));\n                      },\n                      error => {\n                          throw error;\n                      });\n        });\n    }\n\n    static byName(name) {\n        return RegionLookup.getOne({name: name});\n    }\n\n    static byID(id) {\n        return RegionLookup.getOne({id: id});\n    }\n}\n\n","\nclass Base64 {\n    static encode(utf8) {\n        return btoa(unescape(encodeURIComponent(str)));\n    }\n\n    static decode(encoded) {\n        return decodeURIComponent(escape(atob(encoded)));\n    }\n}\n\n","\nclass AutosuggestSource {\n    constructor(name, image, domain, fxf, column, encoded, select, show, sort) {\n        this.name = name;\n        this.image = image;\n        this.domain = domain;\n        this.fxf = fxf;\n        this.column = column;\n        this.encoded = encoded;\n        this.select = select;\n        this.show = show;\n        this.sort = sort;\n    }\n\n    static fromJSON(json) {\n        const encoded = json.encoded || [];\n        const show = json.show || ((selection, option) => {\n            selection.append('span').text(option.text);\n        });\n\n        return new AutosuggestSource(json.name, json.image, json.domain, json.fxf, json.column,\n                                     encoded, json.select, show, json.sort);\n    }\n\n    get(term) {\n        return new Promise((resolve, reject) => {\n            if (term === '') {\n                resolve([]);\n            } else {\n                const baseURL = Constants.AUTOCOMPLETE_URL(this.domain, this.fxf, this.column, term);\n                const size = this.sort ?\n                    Constants.AUTOCOMPLETE_MAX_OPTIONS :\n                    Constants.AUTOCOMPLETE_SHOWN_OPTIONS;\n                const params = {size};\n                const url = `${baseURL}?${$.param(params)}`;\n\n                $.getJSON(url).then(response => {\n                    resolve(response.options.map(option => this.decode(option)));\n                }, reject);\n            }\n        });\n    }\n\n    decode(option) {\n        if (this.encoded.length > 0) {\n            const allText = option.text;\n            const index = allText.lastIndexOf(' ');\n            const text = allText.substring(0, index);\n            const base64 = allText.substring(index + 1);\n            const decoded = Base64.decode(base64);\n            const attributes = decoded.split(Constants.AUTOCOMPLETE_SEPARATOR);\n\n            return _.extend({text}, _.object(this.encoded, attributes));\n        } else {\n            return {text: option.text};\n        }\n    }\n\n    display(container, options) {\n        if (options.length === 0)\n            return [];\n\n        if (this.sort)\n            options = _.sortBy(options, this.sort).slice(0, Constants.AUTOCOMPLETE_SHOWN_OPTIONS);\n\n        const category = container\n            .append('li')\n            .attr('class', 'autocomplete-category');\n\n        if (this.image) {\n            const name = category\n                .append('label')\n                .attr('class', 'autocomplete-title')\n                .text(this.name);\n\n            if (options.length > 1) {\n                const image = category\n                    .append('div')\n                    .append('i')\n                    .attr('class', `fa ${this.image}`);\n            }\n        }\n\n        const results = category\n            .append('ul')\n            .attr('class', 'autocomplete-options sub-list');\n\n        const self = this;\n        return results\n            .selectAll('li')\n            .data(options)\n            .enter()\n            .append('li')\n            .attr('class', 'autocomplete-option')\n            .each(function(option) {\n                self.show(d3.select(this), option);\n            })\n            .on('click', option => this.select(option))\n            .on('mouseover.source', function() {\n                d3.select(this).classed('selected hovered', true);\n            })\n            .on('mouseout.source', function() {\n                d3.select(this).classed('selected hovered', false);\n            })[0];\n    }\n}\n\n","\nclass AutosuggestResults {\n    constructor(resultSelector) {\n        this.results = d3.select(resultSelector);\n\n        this.options = [];\n        this.index = -1;\n\n        this.autohide();\n    }\n\n    autohide() {\n        d3.select('html')\n            .on('click.results', () => this.hide());\n\n        this.results\n            .on('click.results', () => d3.event.stopPropagation());\n    }\n\n    hide() {\n        this.results.style('display', 'none');\n    }\n\n    unhide() {\n        this.results.style('display', 'block');\n    }\n\n    empty() {\n        this.results.html('');\n    }\n\n    display(term) {\n        return new Promise((resolve, reject) => {\n            this.source.get(term).then(options => {\n                this.empty();\n\n                if (options.length === 0) {\n                    this.hide();\n                    resolve([]);\n                } else {\n                    this.unhide();\n                    resolve(this.source.display(this.results, options));\n                }\n            }, error => { throw error; });\n        });\n    }\n\n    show(sources, allOptions) {\n        this.empty();\n\n        const nestedSelections = sources.map((source, index) => {\n            const options = allOptions[index];\n            return source.display(this.results, options);\n        });\n\n        this.updateOptions(_.flatten(nestedSelections));\n        this.unhide();\n    }\n\n    updateOptions(options) {\n        this.options = options.map(option => d3.select(option));\n\n        this.options.forEach((option, index) => {\n            option.on('mouseover.results', () => {\n                this.index = index;\n                this.updateSelected();\n            }).on('mouseout.results', () => {\n                this.index = -1;\n                this.updateSelected();\n            });\n        });\n    }\n\n    updateSelected() {\n        this.options.forEach((option, index) => {\n            option.classed('selected', index === this.index);\n        });\n    }\n\n    keydown(keyCode) {\n        if (keyCode == 38) {\n            this.up();\n        } else if (keyCode == 40) {\n            this.down();\n        }\n\n        this.updateSelected();\n    }\n\n    up() {\n        if (this.index > 0) {\n            this.index -= 1;\n        } else {\n            this.index = this.options.length - 1;\n        }\n    }\n\n    down() {\n        if (this.index < this.options.length - 1) {\n            this.index += 1;\n        } else {\n            this.index = 0;\n        }\n    }\n\n    enter() {\n        const selection = this.options[this.index];\n        selection.on('click')(selection.datum());\n    }\n}\n\n","\n$(document).ready(function() {\n\n    // Multi-complete\n    //\n    multiComplete('#q', '.region-list').listen();\n\n    // for each row (each of which represent a dataset column)\n    //\n    $('.columns-container table tr.column-row').each(function() {\n\n        const row = $(this);\n        const fieldName = row.attr('data-field-name');\n\n        // Find first 5 unique values\n        //\n        const urlForUniqueValues = _datasetMeta.resourceUrl + \n            '?$group=' + fieldName + \n            '&$select=' + fieldName + ' as value,count(*)' + \n            '&$order=count desc';\n\n        $.getJSON(urlForUniqueValues + '&$limit=6', function(results) {\n\n            const resultsToShow = (results.length == 6) ? _.initial(results, 5) : results;\n            const valuesToShow = _.map(resultsToShow, function(result) {\n\n                if (!result.value)\n                    result.value = '<em>blank</em>';\n\n                if (_.isObject(result.value))\n                    result.value = JSON.stringify(result.value);\n\n                return result.value + ' <small>(' + numeral(result.count).format(',') + ')</small>';\n            });\n\n            var s = valuesToShow.join('<br>');\n\n            if (results.length == 6)\n                s += '<br><a target=\"blank\" href=\"' + urlForUniqueValues + '&$limit=1000000000\">view all</a>';\n\n            row.find('.popular-values').html(s);\n        });\n    });\n});\n\n"],"sourceRoot":"/source/"}