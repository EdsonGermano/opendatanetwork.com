{"version":3,"sources":["../v4-search-page-controller.js"],"names":[],"mappings":"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","file":"v4-search-page-controller.js","sourcesContent":["class SearchPageController {\n\n    constructor(params) {\n\n        this.MAP_COLOR_SCALE = colorbrewer.RdYlBu[9],\n        this.MAP_INITIAL_ZOOM = 10.0;\n        this.MAP_RADIUS_SCALE = [500, 2000];\n\n        this.params = params;\n        this.fetching = false;\n        this.fetchedAll = false;\n        this.mostSimilar = [];\n\n        var self = this;\n\n        // Refine menus\n        //\n        $('.refine-link').mouseenter(function() {\n\n            $(this).addClass('refine-link-selected');\n            $(this).children('span').children('i').removeClass('fa-caret-down').addClass('fa-caret-up');\n            $(this).children('ul').slideDown(100);\n        });\n\n        $('.refine-link').mouseleave(function() {\n\n            $(this).removeClass('refine-link-selected');\n            $(this).children('span').children('i').removeClass('fa-caret-up').addClass('fa-caret-down');\n            $(this).children('ul').slideUp(100);\n        });\n\n        // Categories\n        //\n        this.attachCategoriesClickHandlers();\n\n        $('#refine-menu-categories-view-more').click(function() {\n\n            var controller = new ApiController();\n\n            controller.getCategories()\n                .then(data => {\n\n                    var rg = data.results.map(function(result) {\n                        return '<li><i class=\"fa ' + result.metadata.icon + '\"></i>' + result.category + '</li>';\n                    });\n\n                    var s = rg.join('');\n\n                    $('#refine-menu-categories').html(s);\n                    self.attachCategoriesClickHandlers();\n                })\n                .catch(error => console.error(error));\n        });\n\n        // Domains\n        //\n        this.attachDomainsClickHandlers();\n\n        $('#refine-menu-domains-view-more').click(function() {\n\n            var controller = new ApiController();\n\n            controller.getDomains()\n                .then(data => {\n\n                    var rg = data.results.map(function(result) {\n                        return '<li>' + result.domain + '</li>';\n                    });\n\n                    var s = rg.join('');\n\n                    $('#refine-menu-domains').html(s);\n                    self.attachDomainsClickHandlers();\n                })\n                .catch(error => console.error(error));\n        });\n        \n        // Standards\n        //\n        this.attachStandardsClickHandlers();\n    \n        // Tokens\n        //\n        $('.region-token .fa-times-circle').click(function() { \n    \n            self.removeRegion($(this).parent().index());\n            self.navigate();\n        });\n    \n        $('.category-token .fa-times-circle').click(function() { \n    \n            self.toggleCategory($(this).parent().text().toLowerCase().trim());\n            self.navigate();\n        });\n    \n        $('.domain-token .fa-times-circle').click(function() { \n    \n            self.toggleDomain($(this).parent().text().toLowerCase().trim());\n            self.navigate();\n        });\n    \n        $('.standard-token .fa-times-circle').click(function() { \n    \n            self.toggleStandard($(this).parent().text().toLowerCase().trim());\n            self.navigate();\n        });\n    \n        // Infinite scroll search results\n        //\n        $(window).on('scroll', function() {\n    \n            var bottomOffsetToBeginRequest = 1000;\n    \n            if ($(window).scrollTop() >= $(document).height() - $(window).height() - bottomOffsetToBeginRequest) {\n                self.fetchNextPage();\n            }\n    \n        }).scroll();\n    \n        // Add location\n        //\n        new AutoSuggestRegionController('.add-region input[type=\"text\"]', '.add-region ul', function(region) {\n    \n            self.setAutoSuggestedRegion(region, false);\n            self.navigate();\n        });\n    \n        $('.add-region .fa-plus').click(function() {\n    \n            $('.add-region input[type=\"text\"]').focus();\n        });\n    \n        // Similar regions\n        //\n        this.drawSimilarRegions(function(region) {\n    \n            self.setAutoSuggestedRegion(region, false);\n            self.navigate();\n        });\n    \n        // Places in region\n        //\n        this.drawPlacesInRegion();\n    }\n\n    // Public methods\n    //\n    attachCategoriesClickHandlers() {\n    \n        var self = this;\n    \n        $('#refine-menu-categories li:not(.refine-view-more)').click(function() {\n    \n            self.toggleCategory($(this).text().toLowerCase().trim());\n            self.navigate();\n        });\n    }\n    \n    attachDomainsClickHandlers() {\n    \n        var self = this;\n        \n        $('#refine-menu-domains li:not(.refine-view-more)').click(function() {\n    \n            var domain = $(this).text().toLowerCase().trim();\n    \n            self.toggleDomain(domain);\n            self.navigate();\n        });\n    }\n\n    attachStandardsClickHandlers() {\n\n        var self = this;\n\n        $('#refine-menu-standards li').click(function() {\n\n            var standard = $(this).text().toLowerCase().trim();\n\n            self.toggleStandard(standard);\n            self.navigate();\n        });\n    }\n\n    decrementPage() {\n\n        this.params.page--;\n    }\n\n    // Cost of living\n    //\n    drawCostOfLivingData() {\n\n        google.setOnLoadCallback(() => {\n\n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n\n            controller.getCostOfLivingData(regionIds)\n                .then(data => { \n\n                    this.drawCostOfLivingChart(regionIds, data);\n                    this.drawCostOfLivingTable(regionIds, data);\n                })\n                .catch(error => console.error(error));\n        });\n    }\n    \n    drawCostOfLivingChart(regionIds, data) {\n    \n        this.drawCostOfLivingChartForComponent('cost-of-living-all-chart', 'All', regionIds, data);\n        this.drawCostOfLivingChartForComponent('cost-of-living-goods-chart', 'Goods', regionIds, data);\n        this.drawCostOfLivingChartForComponent('cost-of-living-rents-chart', 'Rents', regionIds, data);\n        this.drawCostOfLivingChartForComponent('cost-of-living-other-chart', 'Other', regionIds, data);\n    }\n    \n    drawCostOfLivingChartForComponent(id, component, regionIds, data) {\n    \n        var chartData = []\n    \n        // Header\n        //\n        var header = ['Year'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        chartData.push(header);\n    \n        // Format the data\n        //\n        var o = {};\n    \n        for (var i = 0; i < data.length; i++) {\n    \n            if (data[i].component != component)\n                continue;\n    \n            if (o[data[i].year] == undefined) {\n                o[data[i].year] = [data[i].year];\n            }\n    \n            o[data[i].year].push(parseFloat(data[i].index));\n        }\n    \n        for (var key in o) {\n            chartData.push(o[key]);\n        }\n    \n        this.drawLineChart(id, chartData, {\n    \n            curveType : 'function',\n            legend : { position : 'bottom' },\n            pointShape : 'square',\n            pointSize : 8,\n            title : component,\n        });\n    }\n    \n    drawCostOfLivingTable(regionIds, data) {\n    \n        // Format the data\n        //\n        var components = ['All', 'Goods', 'Other', 'Rents'];\n        var rows = [];\n    \n        for (var i = 0; i < components.length; i++) {\n    \n            var component = components[i];\n            var row = [component];\n    \n            for (var j = 0; j < regionIds.length; j++) {\n    \n                var o = this.getLatestCostOfLiving(data, regionIds[j], component);\n    \n                row.push({\n                    index : (o != null) ? parseFloat(o.index) : 'NA',\n                    percentile : (o != null) ? this.getPercentile(o.rank, o.total_ranks) : 'NA',\n                });\n            }\n    \n            rows.push(row);\n        }\n    \n        // Header\n        //\n        var s = '<tr><th></th>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<th colspan=\\'2\\'>' + this.params.regions[i].name + '</th>';\n        }\n    \n        // Sub header\n        //\n        s += '</tr><tr><td class=\\'column-header\\'></td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td class=\\'column-header\\'>Value</td><td class=\\'column-header\\'>Percentile</td>';\n        }\n    \n        s += '</tr>';\n        \n        for (var i = 0; i < rows.length; i++) {\n    \n            var row = rows[i];\n    \n            s += '<tr>';\n            s += '<td>' + row[0] + '</td>';\n    \n            for (var j = 1; j < row.length; j++) {\n    \n                s += '<td>' + row[j].index + '</td>';\n                s += '<td>' + row[j].percentile + '</td>';\n            }\n            \n            s += '</tr>';\n        }\n    \n        $('#cost-of-living-table').html(s);\n    }\n    \n    getPercentile(rank, totalRanks) {\n    \n        var totalRanks = parseInt(totalRanks);\n        var rank = parseInt(rank);\n        var percentile = parseInt(((totalRanks - rank) / totalRanks) * 100);\n    \n        return numeral(percentile).format('0o');\n    }\n    \n    getLatestCostOfLiving(data, regionId, component) {\n    \n        var datum = null;\n    \n        for (var i = 0; i < data.length; i++) {\n    \n            if (data[i].id != regionId)\n                continue;\n    \n            if (data[i].component != component)\n                continue;\n    \n            if (datum == null) {\n    \n                datum = data[i];\n                continue;\n            }\n    \n            if (parseInt(data[i].year) <= parseInt(datum.year))\n                continue;\n    \n            datum = data[i];\n        }\n        \n        return datum;\n    }\n    \n    // Earnings\n    //\n    drawEarningsData() {\n\n        google.setOnLoadCallback(() => {\n    \n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n    \n            controller.getEarningsData(regionIds)\n                .then(data => { \n\n                    this.drawEarningsMap();\n                    this.drawEarningsChart(regionIds, data);\n                    this.drawEarningsTable(regionIds, data);\n                })\n                .catch(error => console.error(error));\n        });\n    }\n\n    drawEarningsChart(regionIds, data) {\n    \n        var earnings = [];\n    \n        // Header\n        //\n        var header = ['Education Level'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        earnings.push(header);\n    \n        // Less than high school\n        //\n        var someHighSchoolEarnings = ['Some High School'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            someHighSchoolEarnings[i + 1] = parseInt(data[i].median_earnings_less_than_high_school);\n        }\n    \n        earnings.push(someHighSchoolEarnings);\n    \n        // High school\n        //\n        var highSchoolEarnings = ['High School'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            highSchoolEarnings[i + 1] = parseInt(data[i].median_earnings_high_school);\n        }\n    \n        earnings.push(highSchoolEarnings);\n    \n        // Some college\n        //\n        var someCollegeEarnings = ['Some College'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            someCollegeEarnings[i + 1] = parseInt(data[i].median_earnings_some_college_or_associates);\n        }\n    \n        earnings.push(someCollegeEarnings);\n    \n        // Bachelor's\n        //\n        var bachelorsEarnings = ['Bachelor\\'s'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            bachelorsEarnings[i + 1] = parseInt(data[i].median_earnings_bachelor_degree);\n        }\n    \n        earnings.push(bachelorsEarnings);\n    \n        // Graduate degree\n        //\n        var graduateDegreeEarnings = ['Graduate Degree'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            graduateDegreeEarnings[i + 1] = parseInt(data[i].median_earnings_graduate_or_professional_degree);\n        }\n    \n        earnings.push(graduateDegreeEarnings);\n    \n        this.drawSteppedAreaChart('earnings-chart', earnings, {\n    \n            areaOpacity : 0,\n            connectSteps: true,\n            curveType : 'function',\n            focusTarget : 'category',\n            legend : { position : 'bottom' },\n            title : 'Earnings by Education Level',\n            vAxis : { format : 'currency' },\n        });\n    }\n\n    drawEarningsMap() {\n\n        const controller = new ApiController();\n        const placesPromise = controller.getPlaces();\n        const earningsPromise = controller.getEarningsByPlace();\n        \n        return Promise.all([placesPromise, earningsPromise])\n            .then(values => {\n\n                const placesResponse = values[0];\n                const earningsResponse = values[1];\n\n                // Get the geo coordinates for each region\n                //\n                const regionPlaces = this.getPlacesForRegion(placesResponse);\n\n                // Create a place lookup table\n                //\n                const placeMap = {};\n                placesResponse.forEach(place => placeMap[place.id] = place); // init the place map\n\n                // Get map data\n                //\n                const earningsPlaces = [];\n\n                earningsResponse.forEach(item => {\n\n                    if (item.median_earnings == 0)\n                        return;\n\n                    if (item.id in placeMap) {\n\n                        earningsPlaces.push({\n                            coordinates : placeMap[item.id].location.coordinates,\n                            id : item.id,\n                            name : item.name,\n                            value : parseInt(item.median_earnings),\n                        })\n                    }\n                });\n\n                earningsPlaces.sort((a, b) => b.value - a.value); // desc\n                const earnings = _.map(earningsPlaces, x => { return x.value });\n\n                // Init map\n                //\n                const radiusScale = this.getRadiusScaleLinear(earnings)\n                const colorScale = this.getColorScale(earnings)\n\n                const coordinates = regionPlaces[0].location.coordinates;\n                const center = [coordinates[1], coordinates[0]];\n                const map = L.map('map', { zoomControl : true });\n\n                L.tileLayer('https://a.tiles.mapbox.com/v3/socrata-apps.ibp0l899/{z}/{x}/{y}.png').addTo(map);\n                map.setView(center, this.MAP_INITIAL_ZOOM);\n\n                // Populate map\n                //\n                this.drawCirclesForPlaces(map, earningsPlaces, radiusScale, colorScale);\n                this.drawMarkersForPlaces(map, regionPlaces);\n            })\n            .catch(error => console.error(error));\n    }\n\n    drawEarningsTable(regionIds, data) {\n\n        var s = '<tr><th></th>';\n\n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<th>' + this.params.regions[i].name + '</th>';\n        }\n\n        // Median earnings all\n        //\n        s += '</tr><tr><td>Median Earnings (All Workers)</td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td>' + numeral(data[i].median_earnings).format('$0,0') + '</td>';\n        }\n\n        // Median earnings female\n        //\n        s += '</tr><tr><td>Median Female Earnings (Full Time)</td>';\n\n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td>' + numeral(data[i].female_full_time_median_earnings).format('$0,0') + '</td>';\n        }\n\n        // Median earnings male\n        //\n        s += '</tr><tr><td>Median Male Earnings (Full Time)</td>';\n\n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td>' + numeral(data[i].male_full_time_median_earnings).format('$0,0') + '</td>';\n        }\n\n        s += '</tr>';\n\n        $('#earnings-table').html(s);\n    }\n\n    // Education\n    //\n    drawEducationData() {\n\n        google.setOnLoadCallback(() => {\n\n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n\n            controller.getEducationData(regionIds)\n                .then(data => this.drawEducationTable(regionIds, data))\n                .catch(error => console.error(error));\n        });\n    }\n\n    drawEducationTable(regionIds, data) {\n\n        // Header\n        //\n        var s = '<tr><th></th>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<th colspan=\\'2\\'>' + this.params.regions[i].name + '</th>';\n        }\n    \n        // Sub header\n        //\n        s += '</tr><tr><td class=\\'column-header\\'></td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td class=\\'column-header\\'>Percent</td><td class=\\'column-header\\'>Percentile</td>';\n        }\n    \n        // At least bachelor's\n        //\n        s += '</tr><tr><td>At Least Bachelor\\'s Degree</td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n    \n            var totalRanks = parseInt(data[i].total_ranks);\n            var rank = parseInt(data[i].percent_bachelors_degree_or_higher_rank);\n            var percentile = parseInt(((totalRanks - rank) / totalRanks) * 100);\n            \n            s += '<td>' + data[i].percent_bachelors_degree_or_higher + '%</td>';\n            s += '<td>' + numeral(percentile).format('0o') + '</td>';\n        }\n    \n        // At least high school diploma\n        //\n        s += '</tr><tr><td>At Least High School Diploma</td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n    \n            var totalRanks = parseInt(data[i].total_ranks);\n            var rank = parseInt(data[i].percent_high_school_graduate_or_higher);\n            var percentile = parseInt(((totalRanks - rank) / totalRanks) * 100);\n    \n            s += '<td>' + data[i].percent_high_school_graduate_or_higher + '%</td>';\n            s += '<td>' + numeral(percentile).format('0o') + '</td>';\n        }\n    \n        s += '</tr>';\n    \n        $('#education-table').html(s);\n    }\n    \n    // GDP data\n    //\n    drawGdpData() {\n\n        google.setOnLoadCallback(() => {\n\n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n\n            controller.getGdpData(regionIds)\n                .then(data => { \n\n                    this.drawGdpChart(regionIds, data);\n                    this.drawGdpChangeChart(regionIds, data);\n                })\n                .catch(error => console.error(error));\n        });\n    }\n    \n    drawGdpChart(regionIds, data) {\n    \n        var chartData = [];\n    \n        // Header\n        //\n        var header = ['Year'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        chartData.push(header);\n    \n        // Format the data\n        //\n        var o = {};\n    \n        for (var i = 0; i < data.length; i++) {\n    \n            if (o[data[i].year] == undefined) {\n                o[data[i].year] = [data[i].year];\n            }\n    \n            o[data[i].year].push(parseFloat(data[i].per_capita_gdp));\n        }\n    \n        for (var key in o) {\n            chartData.push(o[key]);\n        }\n    \n        // Draw chart\n        //\n        this.drawLineChart('per-capita-gdp-chart', chartData, {\n    \n            curveType : 'function',\n            legend : { position : 'bottom' },\n            pointShape : 'square',\n            pointSize : 8,\n            title : 'Per Capita Real GDP over Time',\n        });\n    }\n    \n    drawGdpChangeChart(regionIds, data) {\n    \n        var chartData = [];\n    \n        // Header\n        //\n        var header = ['Year'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        chartData.push(header);\n    \n        // Format the data\n        //\n        var o = {};\n    \n        for (var i = 0; i < data.length; i++) {\n    \n            if (o[data[i].year] == undefined) {\n                o[data[i].year] = [data[i].year];\n            }\n    \n            o[data[i].year].push(parseFloat(data[i].per_capita_gdp_percent_change) / 100);\n        }\n    \n        for (var key in o) {\n            chartData.push(o[key]);\n        }\n    \n        // Draw chart\n        //\n        this.drawLineChart('per-capita-gdp-change-chart', chartData, {\n    \n            curveType : 'function',\n            legend : { position : 'bottom' },\n            pointShape : 'square',\n            pointSize : 8,\n            title : 'Annual Change in Per Capita GDP over Time',\n            vAxis : { format : '#.#%' },\n        });\n    }\n    \n    // Occupations\n    //\n    drawOccupationsData() {\n\n        google.setOnLoadCallback(() => {\n\n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n\n            controller.getOccupationsData(regionIds)\n                .then(data => this.drawOccupationsTable(regionIds, data))\n                .catch(error => console.error(error));\n        });\n    }\n    \n    drawOccupationsTable(regionIds, data) {\n    \n        var s = '<tr><th></th>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<th colspan=\\'2\\'>' + this.params.regions[i].name + '</th>';\n        }\n    \n        // Sub header\n        //\n        s += '</tr><tr><td class=\\'column-header\\'></td>';\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            s += '<td class=\\'column-header\\'>Percent</td><td class=\\'column-header\\'>Percentile</td>';\n        }\n    \n        for (var i = 0; i < data.length; i++) {\n    \n            if ((i % regionIds.length) == 0)\n                s += '</tr><tr><td>' + data[i].occupation + '</td>'; \n    \n            var totalRanks = parseInt(data[i].total_ranks);\n            var rank = parseInt(data[i].percent_employed_rank);\n            var percentile = parseInt(((totalRanks - rank) / totalRanks) * 100);\n    \n            s += '<td>' + numeral(data[i].percent_employed).format('0.0') + '%</td>';\n            s += '<td>' + numeral(percentile).format('0o') + '</td>';\n        }\n    \n        s += '</tr>';\n    \n        $('#occupations-table').html(s);\n    }\n    \n    // Population\n    //\n    drawPopulationData() {\n\n        google.setOnLoadCallback(() => {\n\n            var regionIds = this.params.regions.map(function(region) { return region.id; });\n            var controller = new ApiController();\n\n            controller.getPopulationData(regionIds)\n                .then(data => { \n\n                    this.drawPopulationMap();\n                    this.drawPopulationChart(regionIds, data);\n                    this.drawPopulationChangeChart(regionIds, data);\n                })\n                .catch(error => console.error(error));\n        });\n    }\n    \n    drawPopulationChart(regionIds, data) {\n    \n        var chartData = [];\n        var year;\n    \n        // Header\n        //\n        var header = ['Year'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        chartData.push(header);\n    \n        // Data\n        //\n        for (var i = 0; i < data.length; i++) {\n    \n            var m = (i % regionIds.length);\n    \n            if (m == 0) {\n    \n                year = [];\n                year[0] = data[i].year;\n                chartData.push(year);\n            }\n    \n            year[m + 1] = parseInt(data[i].population);\n        }\n    \n        this.drawLineChart('population-chart', chartData, {\n    \n            curveType : 'function',\n            legend : { position : 'bottom' },\n            pointShape : 'square',\n            pointSize : 8,\n            title : 'Population',\n        });\n    }\n    \n    drawPopulationChangeChart(regionIds, data) {\n    \n        var chartData = [];\n        var year;\n    \n        // Header\n        //\n        var header = ['Year'];\n    \n        for (var i = 0; i < regionIds.length; i++) {\n            header[i + 1] = this.params.regions[i].name;\n        }\n    \n        chartData.push(header);\n    \n        // Data\n        //\n        for (var i = 0; i < data.length; i++) {\n    \n            var m = (i % regionIds.length);\n    \n            if (m == 0) {\n    \n                year = [];\n                year[0] = data[i].year;\n                chartData.push(year);\n            }\n    \n            year[m + 1] = parseFloat(data[i].population_percent_change) / 100;\n        }\n    \n        this.drawLineChart('population-change-chart', chartData, {\n    \n            curveType : 'function',\n            legend : { position : 'bottom' },\n            pointShape : 'square',\n            pointSize : 8,\n            title : 'Population Change',\n            vAxis : { format : '#.#%' },\n        });\n    }\n\n    drawPopulationMap() {\n\n        const controller = new ApiController();\n        const places = [];\n\n        controller.getPlaces()\n            .then(placesResponse => {\n\n                // Set place value to earnings data\n                //\n                placesResponse.forEach(item => {\n                    places.push({\n                        coordinates : item.location.coordinates,\n                        name : item.name,\n                        id : item.id,\n                        value : parseInt(item.population),\n                    })\n                });\n\n                // Get map data\n                //\n                const populatedPlaces = places.sort((a, b) => b.value - a.value);\n                const regionPlaces = this.getPlacesForRegion(placesResponse);\n                const populations = _.map(populatedPlaces, x => { return x.value });\n\n                // Init map\n                //\n                const radiusScale = this.getRadiusScaleLog(populations)\n                const colorScale = this.getColorScale(populations)\n\n                const coordinates = regionPlaces[0].location.coordinates;\n                const center = [coordinates[1], coordinates[0]];\n                const map = L.map('map', { zoomControl : true });\n\n                L.tileLayer('https://a.tiles.mapbox.com/v3/socrata-apps.ibp0l899/{z}/{x}/{y}.png').addTo(map);\n                map.setView(center, this.MAP_INITIAL_ZOOM);\n\n                // Populate map\n                //\n                this.drawCirclesForPlaces(map, populatedPlaces, radiusScale, colorScale);\n                this.drawMarkersForPlaces(map, regionPlaces);\n            })\n            .catch(error => console.error(error));\n    }\n\n    // Places in region\n    //\n    drawPlacesInRegion() {\n\n        if (this.params.regions.length == 0) \n            return;\n\n        var region = this.params.regions[0];\n\n        switch (region.type) {\n\n            case 'nation': this.drawChildPlacesInRegion(region, 'Regions in {0}'.format(region.name)); break;\n            case 'region': this.drawChildPlacesInRegion(region, 'Divisions in {0}'.format(region.name)); break;\n            case 'division': this.drawChildPlacesInRegion(region, 'States in {0}'.format(region.name)); break;\n            case 'state': this.drawCitiesAndCountiesInState(region); break;\n            case 'county': this.drawOtherCountiesInState(region); break;\n            case 'msa': this.drawOtherMetrosInState(region); break;\n            case 'place': this.drawOtherCitiesInState(region); break;\n        }\n    }\n\n    drawChildPlacesInRegion(region, label) {\n\n        var controller = new ApiController();\n\n        controller.getChildRegions(region.id)\n            .then(response => {\n        \n                this.drawPlacesInRegionHeader('#places-in-region-header-0', label);\n                this.drawPlacesInRegionList('#places-in-region-list-0', response);\n            })\n            .catch(error => console.error(error));\n    }\n\n    drawCitiesAndCountiesInState(region) {\n\n        var controller = new ApiController();\n        var citiesPromise = controller.getCitiesInState(region.id);\n        var countiesPromise = controller.getCountiesInState(region.id);\n\n        return Promise.all([citiesPromise, countiesPromise])\n            .then(values => {\n\n                if (values.length == 0)\n                    return;\n\n                if (values[0].length > 0) {\n\n                    this.drawPlacesInRegionHeader('#places-in-region-header-0', 'Places in {0}'.format(region.name));\n                    this.drawPlacesInRegionList('#places-in-region-list-0', values[0]);\n                }\n                \n                if (values[1].length > 0) {\n\n                    this.drawPlacesInRegionHeader('#places-in-region-header-1', 'Counties in {0}'.format(region.name));\n                    this.drawPlacesInRegionList('#places-in-region-list-1', values[1]);\n                }\n            })\n            .catch(error => console.error(error));\n    }\n\n    drawOtherCitiesInState(region) {\n\n        var controller = new ApiController();\n\n        controller.getParentState(region)\n            .then(response => {\n    \n                if (response.length == 0)\n                    return;\n    \n                var state = response[0];\n    \n                controller.getCitiesInState(state.parent_id)\n                    .then(response => {\n        \n                        if (response.length == 0)\n                            return;\n        \n                        this.drawPlacesInRegionHeader('#places-in-region-header-0', 'Places in {0}'.format(state.parent_name));\n                        this.drawPlacesInRegionList('#places-in-region-list-0', response);\n                    })\n                    .catch(error => console.error(error));\n            });\n    }\n\n    drawOtherCountiesInState(region) {\n\n        var controller = new ApiController();\n\n        controller.getParentState(region)\n            .then(response => {\n    \n                if (response.length == 0)\n                    return;\n    \n                var state = response[0];\n                \n                controller.getCountiesInState(state.parent_id)\n                    .then(response => {\n        \n                        if (response.length == 0)\n                            return;\n        \n                        this.drawPlacesInRegionHeader('#places-in-region-header-0', 'Counties in {0}'.format(state.parent_name));\n                        this.drawPlacesInRegionList('#places-in-region-list-0', response);\n                    })\n                    .catch(error => console.error(error));\n            });\n    }\n\n    drawOtherMetrosInState(region) {\n\n        var controller = new ApiController();\n\n        controller.getParentState(region)\n            .then(response => {\n    \n                if (response.length == 0)\n                    return;\n    \n                var state = response[0];\n    \n                controller.getMetrosInState(state.parent_id)\n                    .then(response => {\n        \n                        if (response.length == 0)\n                            return;\n        \n                        this.drawPlacesInRegionHeader('#places-in-region-header-0', 'Metropolitan Areas in {0}'.format(state.parent_name));\n                        this.drawPlacesInRegionList('#places-in-region-list-0', response);\n                    })\n                    .catch(error => console.error(error));\n            });\n    }\n\n    removeCurrentRegions(regions, maxCount = 5) {\n\n        var count = 0;\n        var rg = [];\n\n        for (var i = 0; i < regions.length; i++) {\n\n            if (this.isRegionIdContainedInCurrentRegions(regions[i].child_id))\n                continue;\n\n            rg.push(regions[i]);\n\n            if (count == (maxCount - 1))\n                break;\n\n            count++;\n        }\n\n        return rg;\n    }\n\n    drawPlacesInRegionHeader(headerId, label) {\n\n        $(headerId).text(label).slideToggle(100);\n    }\n\n    drawPlacesInRegionList(listId, data, maxCount = 5) {\n\n        if (data.length == 0)\n            return;\n\n        var count = 0;\n        var s = '';\n\n        for (var i = 0; i < data.length; i++) {\n\n            if (this.isRegionIdContainedInCurrentRegions(data[i].child_id))\n                continue;\n\n            s += '<li><a href=\"';\n            s += this.getSearchPageForRegionsAndVectorUrl(data[i].child_name) + '\">';\n            s += data[i].child_name;\n            s += '</a></li>';\n\n            if (count == (maxCount - 1))\n                break;\n\n            count++;\n        }\n\n        $(listId).html(s);\n        $(listId).slideToggle(100);\n    }\n\n    isRegionIdContainedInCurrentRegions(regionId) {\n\n        for (var j = 0; j < this.params.regions.length; j++) {\n\n            if (regionId == this.params.regions[j].id)\n                return true;\n        }\n\n        return false;\n    }\n\n    // Similar regions\n    //\n    drawSimilarRegions(onClickRegion) {\n\n        if (this.params.regions.length == 0) \n            return;\n\n        var region = this.params.regions[0];\n        var controller = new ApiController();\n\n        controller.getSimilarRegions(region.id)\n            .then(data => this.drawSimilarRegionsList(data, onClickRegion))\n            .catch(error => console.error(error));\n    }\n\n    drawSimilarRegionsList(data, onClickRegion) {\n\n        if (data.most_similar == undefined)\n            return;\n\n        var count = 0;\n        var s = '';\n\n        for (var i = 0; i < data.most_similar.length; i++) {\n\n            if (this.isRegionIdContainedInCurrentRegions(data.most_similar[i].id))\n                continue;\n\n            s += '<li><a><i class=\"fa fa-plus\"></i>' + data.most_similar[i].name + '</a></li>'\n\n            if (count == 4)\n                break;\n\n            count++;\n        }\n    \n        $('#similar-regions').html(s);\n        $('#similar-regions').slideToggle(100);\n        \n        $('#similar-regions li a').click(function() {\n    \n            var index = $(this).parent().index();\n            onClickRegion(data.most_similar[index].name);\n        });\n    }\n    \n    // Draw charts\n    //\n    drawLineChart(chartId, data, options) {\n    \n        var dataTable = google.visualization.arrayToDataTable(data);\n        var chart = new google.visualization.LineChart(document.getElementById(chartId));\n    \n        chart.draw(dataTable, options);\n    }\n    \n    drawSteppedAreaChart(chartId, data, options) {\n    \n        var dataTable = google.visualization.arrayToDataTable(data);\n        var chart = new google.visualization.SteppedAreaChart(document.getElementById(chartId));\n    \n        chart.draw(dataTable, options);\n    }\n\n    // Maps\n    //\n    getRadiusScaleLinear(values) {\n\n        return d3.scale.linear()\n            .domain(d3.extent(values))\n            .range(this.MAP_RADIUS_SCALE);\n    }\n\n    getRadiusScaleLog(values) {\n\n        return d3.scale.log()\n            .domain(d3.extent(values))\n            .range(this.MAP_RADIUS_SCALE);\n    }\n\n    getColorScale(values) {\n\n        const domain = (() => {\n\n            const step = 1.0 / this.MAP_COLOR_SCALE.length;\n\n            function quantile(value, index, list) {\n                return d3.quantile(values, (index + 1) * step);\n            }\n\n            return _.map(this.MAP_COLOR_SCALE.slice(1), quantile);\n        })();\n\n        return d3.scale.quantile()\n            .domain(domain)\n            .range(this.MAP_COLOR_SCALE);\n    }\n\n    drawCirclesForPlaces(map, places, radiusScale, colorScale) {\n\n        places.forEach(place => {\n\n            var feature = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"name\": place.name\n                },\n                \"geometry\": {\n                    \"coordinates\": place.coordinates,\n                    \"type\": \"Point\",\n                }\n            };\n\n            const options = {\n                fillColor: colorScale(place.value),\n                fillOpacity: 1,\n                opacity: 0,\n                radius: 8,\n                stroke: false,\n                weight: 0,\n            };\n\n            L.geoJson(\n                feature, \n                {\n                    pointToLayer: (feature, latlng) => {\n                        return L.circle(latlng, radiusScale(place.value ), options);\n                    }\n                }\n            ).addTo(map);\n        });\n    }\n\n    drawMarkersForPlaces(map, places) {\n\n        places.forEach(place => {\n\n            var feature = {\n                \"type\": \"Feature\",\n                \"properties\": {\n                    \"name\": place.name\n                },\n                \"geometry\": {\n                    \"coordinates\": place.location.coordinates,\n                    \"type\": \"Point\",\n                }\n            };\n\n            L.geoJson(feature).addTo(map);\n        });\n    }\n\n    getPlacesForRegion(data) {\n\n        var places = [];\n\n        data.forEach(place => {\n\n            this.params.regions.forEach(region => {\n\n                if (place.id == region.id)\n                    places.push(place);\n            })\n        });\n\n        return places;\n    }\n\n    // Paging\n    //\n    fetchNextPage() {\n    \n        if (this.fetching || this.fetchedAll)\n            return;\n    \n        this.fetching = true;\n        this.incrementPage();\n    \n        var self = this;\n    \n        $.ajax(this.getSearchResultsUrl()).done(function(data, textStatus, jqXHR) {\n\n            if (jqXHR.status == 204) { // no content\n    \n                self.decrementPage();\n                self.fetching = false;\n                self.fetchedAll = true;\n                return;\n            }\n    \n            $('.datasets').append(data);\n            self.fetching = false;\n        });\n    }\n    \n    getSearchPageForRegionsAndVectorUrl(regions, vector, searchResults, queryString) {\n    \n        var url = '/';\n    \n        if (typeof(regions) === 'string') {\n    \n            url += regions.replace(/,/g, '').replace(/ /g, '_');\n        }\n        else if (Array.isArray(regions)) {\n    \n            var regionNames = [];\n    \n            regionNames = regions.map(function(region) {\n                return region.replace(/,/g, '').replace(/ /g, '_');\n            });\n    \n            url += regionNames.join('_vs_');\n        }\n        else {\n    \n            url += 'search';\n        }\n    \n        if (vector)\n            url += '/' + vector;\n    \n        if (searchResults)\n            url += '/search-results';\n    \n        if (queryString) \n            url += queryString;\n    \n        return url;\n    }\n    \n    getSearchPageUrl(searchResults) {\n\n        if ((this.params.regions.length > 0) || this.params.autoSuggestedRegion) {\n\n            var regionNames = [];\n\n            if (this.params.resetRegions == false) {\n\n                regionNames = this.params.regions.map(function(region) { \n                    return region.name; \n                });\n            }\n\n            if (this.params.autoSuggestedRegion)\n                regionNames.push(this.params.autoSuggestedRegion);\n\n            return this.getSearchPageForRegionsAndVectorUrl(regionNames, this.params.vector, searchResults, this.getSearchQueryString());\n        }\n        else {\n\n            return this.getSearchPageForRegionsAndVectorUrl(null, this.params.vector, searchResults, this.getSearchQueryString());\n        }\n    }\n\n    getSearchResultsUrl() {\n\n        return this.getSearchPageUrl(true);\n    }\n\n    getSearchQueryString() {\n\n        var url = '?q=' + encodeURIComponent(this.params.q);\n\n        if (this.params.page > 1)\n            url += '&page=' + this.params.page;\n\n        if (this.params.categories.length > 0)\n            url += '&categories=' + encodeURIComponent(this.params.categories.join(','));\n\n        if (this.params.domains.length > 0)\n            url += '&domains=' + encodeURIComponent(this.params.domains.join(','));\n\n        if (this.params.standards.length > 0)\n            url += '&standards=' + encodeURIComponent(this.params.standards.join(','));\n\n        if (this.params.debug)\n            url += '&debug=';\n\n        return url;\n    }\n\n    incrementPage() {\n    \n        this.params.page++;\n    }\n    \n    navigate() {\n    \n        window.location.href = this.getSearchPageUrl();\n    }\n    \n    removeRegion(regionIndex) {\n    \n        this.params.regions.splice(regionIndex, 1); // remove at index i\n        this.params.page = 1;\n    }\n    \n    setAutoSuggestedRegion(region, resetRegions) {\n    \n        this.params.autoSuggestedRegion = region;\n        this.params.resetRegions = resetRegions;\n        this.params.page = 1;\n    }\n    \n    toggleCategory(category) {\n    \n        var i = this.params.categories.indexOf(category);\n    \n        if (i > -1)\n            this.params.categories.splice(i, 1); // remove at index i\n        else\n            this.params.categories.push(category);\n    }\n    \n    toggleDomain(domain) {\n    \n        var i = this.params.domains.indexOf(domain);\n    \n        if (i > -1)\n            this.params.domains.splice(i, 1); // remove at index i\n        else\n            this.params.domains.push(domain);\n    }\n    \n    toggleStandard(standard) {\n    \n        var i = this.params.standards.indexOf(standard);\n    \n        if (i > -1)\n            this.params.standards.splice(i, 1); // remove at index i\n        else\n            this.params.standards.push(standard);\n    }\n}"]}